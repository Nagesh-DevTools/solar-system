name: Unit testing workflow

on:
  workflow_dispatch:
  push:

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: SuperPassword

jobs:
  Unit-testing:
    services:
      mongo-db:
        image: siddharth67/mongo-db:non-prod  # pre-built mongo db image
        ports:
          - 27017:27017

        env:
          MONGO_URI: 'mongodb://localhost:27017/superData'
          MONGO_USERNAME: non-prod-user
          MONGO_PASSWORD: non-prod-password
        
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js with version
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache NPM
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

     

Code-coverage:
    code:
      container:
        image: node:18
      services:
        mongo-db: siddharth67/mongo-db:non-prod
        options:
          --name proddb
        env:
          MONGO_URI: 'proddb://localhost:27017/superData'
          MONGO_USERNAME: non-prod-user
          MONGO_PASSWORD: non-prod-password
        
      runs-on: ubuntu-latest

      steps:
      - name: Checkout repo
        uses: actions/checkout@v4

    #  - name: Set up Node.js with version
     #   uses: actions/setup-node@v4
     #   with:
      #    node-version: 18

      - name: Cache NPM
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm install

      - name: Generate coverage report
        run: npm run coverage
        continue-on-error: true

    

  docker-image:
    permissions:
      packages: write
    name: docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_NAME }}
          password: ${{ secrets.DOCKER_PASS }}

    
      - name: Build 
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: knightfury285/solar:${{ github.sha }}



      - name: Test Docker container
        run: |
          docker images
          docker run --name solarsystem -d \
            -p 3000:3000 \
            -e MONGO_URI=${MONGO_URI} \
            -e MONGO_USERNAME=${MONGO_USERNAME} \
            -e MONGO_PASSWORD=${MONGO_PASSWORD} \
            knightfury285/solar:${{ github.sha }}


          echo "Testing URL"
          wget -q -O - http://127.0.0.1:3000/live | grep live

      - name:  push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            knightfury285/solar:${{ github.sha }}
            




          
